stages:
  - sast
  - dast


# Semgrep SAST scan

semgrep-sast:
  stage: sast
  image: semgrep/semgrep
  script:
    - semgrep --config auto .

# Bearer SAST
bearer-sast:
  stage: sast
  image:
    name: bearer/bearer
    entrypoint: [""]
  script: bearer scan .

# Deploy the application
# zap_scan:
#   stage: dast
#   image: docker:latest
#   services: 
#     - docker:dind
#   script:
#     - unset DOCKER_HOST
#     - mkdir -p /zap/wrk
#     - docker-compose up -d
#     - docker run -d --network=test_my_app_network -v /zap/wrk:/zap ghcr.io/zaproxy/zaproxy:stable ./zap-full-scan.py -t http://app:8080 -J zap.json
#     - cat /zap/wrk/zap.json
#   artifacts:
#     paths:
#       - zap.json


# zap_scan:
#   stage: dast
#   image: docker:latest
#   services: 
#     - docker:dind
#   script:
#     - unset DOCKER_HOST
#     - docker-compose up -d
#     - mkdir zap-reports
#     - cd zap-reports
#     - docker network list
#     - docker run  --name zap-container --network test_my_app_network --rm -v $(pwd):/zap/wrk -u $(id -u ${USER}):$(id -g ${USER}) ghcr.io/zaproxy/zaproxy:stable zap-baseline.py -t http://app:8080 > zap.txt || true 
#     - cat zap.txt


zap_scan:
  stage: dast
  image: docker:latest
  services: 
    - docker:dind
  script:
    - unset DOCKER_HOST
    - docker-compose up -d
    - mkdir zap-reports
    - cd zap-reports
    - docker network list
    - docker run  --name zap-container --network test_my_app_network --rm -v $(pwd):/zap/wrk -u $(id -u ${USER}):$(id -g ${USER}) ghcr.io/zaproxy/zaproxy:stable zap-full-scan.py -t http://app:8080 > zap.txt || true 
    - cat zap.txt
    - docker-compose down

dast:
  stage: dast
  image: sullo/nikto
  services: 
    - docker:dind
  script:
    - unset DOCKER_HOST
    - docker-compose up -d
    - docker run --name nikto --rm --network test_my_app_network  -u $(id -u ${USER}):$(id -g ${USER})  -v $(pwd):/zap/wrk frapsoft/nikto -host http://app:8080 > nikto.txt || true
    - cat nikto.txt
    - docker-compose down

# Variables to manage Docker setup
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
